//
//  ResultsViewController.swift
//  PersonalQuiz
//
//  Created by Alexey Efimov on 05.04.2021.
//

import UIKit

class ResultsViewController: UIViewController {
    
    @IBOutlet weak var animalLabel: UILabel!
    @IBOutlet weak var resultLabel: UILabel!
    
    // 1. –ü–µ—Ä–µ–¥–∞—Ç—å —Å—é–¥–∞ –º–∞—Å—Å–∏–≤ —Å –æ—Ç–≤–µ—Ç–∞–º–∏
    var answersValue: [Answer]!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        result()
        // 4. –ò–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç –∫–Ω–æ–ø–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∑–∞–¥ –Ω–∞ —ç–∫—Ä–∞–Ω–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        navigationItem.hidesBackButton = true
    }
}

extension ResultsViewController {
    
    private func result() {
        //—Å–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è
        var frequencyOfAnimals: [AnimalType: Int] = [:]
        //–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –∏ –ø—Ä–∏—Å–≤–æ–µ–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –∏–∑ enum [AnimalType]
        let animals = answersValue.map { $0.type }
        //–∏—Ç–µ—Ä–∞—Ü–∏—è —ç—Ç–æ–≥–æ –∂–µ –º–∞—Å—Å–∏–≤–∞
        for animal in animals {
            //–µ—Å–ª–∏ –≤ —Å–ª–æ–≤–∞—Ä–µ —É–∂–µ –∏–º–µ–µ—Ç—Å—è —ç–∫–∑–µ–º–ø–ª—è—Ä, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∫—Ä–æ–ª–∏–∫, —Ç–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç
            //—É—Å–ª–æ–≤–∏–µ –∏ –ø—Ä–∏–±–∞–≤–ª—è–µ—Ç –∫–ª—é—á –∏–Ω–¥–µ–∫—Å–∞ –∫ –∫—Ä–æ–ª–∏–∫—É +1
            //–≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ, –µ—Å–ª–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∫—Ä–æ–ª–∏–∫–∞ –Ω–µ—Ç, —Ç–æ —É—Å–ª–æ–≤–∏–µ –Ω–∏–∫–æ–≥–¥–∞
            //–Ω–µ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –∏ –≤—Å–µ–≥–¥–∞ –ø–µ—Ä–µ–π–¥–µ—Ç –∫ —É—Å–ª–æ–≤–∏—é else –∏ –ø—Ä–∏—Å–≤–æ–∏—Ç
            //–∑–Ω–∞—á–µ–Ω–∏–µ –∫–ª—é—á–∞ –∫—Ä–æ–ª–∏–∫–∞ 1, –∞ –¥–∞–ª—å—à–µ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –±—É–¥–µ—Ç –ø—Ä–∏–±–∞–≤–ª—è—Ç—å +1 –∫
            //–∫–ª—é—á—É –∏–Ω–¥–µ–∫—Å–∞ –∫—Ä–æ–ª–∏–∫–∞
            // 2. –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–∞–∏–±–æ–ª–µ–µ —á–∞—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∞—é—â–∏–π—Å—è —Ç–∏–ø –∂–∏–≤–æ—Ç–Ω–æ–≥–æ
            if let animalTypeCount = frequencyOfAnimals[animal] {
                frequencyOfAnimals.updateValue(animalTypeCount + 1, forKey: animal)
            } else {
                frequencyOfAnimals[animal] = 1
            }
        }
        //—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –Ω–∞–∏–±–æ–ª–µ–µ —á–∞—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∞—é—â–∏—Ö—Å—è –∂–∏–≤–æ—Ç–Ω—ã—Ö –ø–æ –∫–ª—é—á—É, —ç—Ç–æ –º–∞—Å—Å–∏–≤ –∫–æ—Ä—Ç–µ–∂–µ–π,
        //–∫–æ—Ç–æ—Ä—ã–π –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –≤ –ø–æ—Ä—è–¥–∫–µ —É–±—ã–≤–∞–Ω–∏—è
        let sortedFrequencyOfAnimals = frequencyOfAnimals.sorted { $0.value > $1.value }
        //–≤—ã–±–æ—Ä –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –∫–æ—Ä—Ç–µ–∂–∞, –∫–æ—Ç–æ—Ä—ã–π –∏ —è–≤–ª—è–µ—Ç—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –Ω–∞—à–µ–≥–æ –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
        guard let mostFrequencyAnimal = sortedFrequencyOfAnimals.first?.key else { return }
        //–∑–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –æ—Ç—Å—ã–ª–∫–∞ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –≤ —Ñ—É–Ω–∫—Ü–∏—é –∏ –Ω–∞ —ç–∫—Ä–∞–Ω
        updateUI(with: mostFrequencyAnimal)
    }
    
    // –†–µ—à–µ–Ω–∏–µ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É:
//    let mostFrequencyAnimal = Dictionary(grouping: answers) { $0.type }
//        .sorted { $0.value.count > $1.value.count }
//        .first?.key
    
    // 3. –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤–∏–∏ —Å —ç—Ç–∏–º –∂–∏–≤–æ—Ç–Ω—ã–º
    private func updateUI(with animal: AnimalType?) {
        animalLabel.text = "–í—ã - \(animal?.rawValue ?? "üê∂")!"
        resultLabel.text = animal?.definition ?? ""
    }
}
//—ç—Ç–æ –º–æ–π —É—Ä–æ–¥–ª–∏–≤—ã–π –∫–æ–¥ :)
//    private func checkAnimal(answers: [Answer]) {
//        var animal: [AnimalType] = []
//        for valueOne in answers {
//            for valueTwo in questions[questionIndex].answers {
//                if valueOne.type == valueTwo.type {
//                    animal.append(valueOne.type)
//                }
//            }
//        }
//        typeAnimal(animalsInAnswers: animal)
//    }
    /*private func typeAnimal(animalsInAnswers: [AnimalType]) {
        var dogs = 0
        var cats = 0
        var rabbits = 0
        var turtles = 0

        for value in animalsInAnswers {
            switch value {
            case AnimalType.dog:
                dogs += 1
            case AnimalType.cat:
                cats += 1
            case AnimalType.rabbit:
                rabbits += 1
            default:
                turtles += 1
            }
        }
        
        var resultNumbersAnimals = [
            AnimalType.dog: dogs,
            AnimalType.cat: cats,
            AnimalType.rabbit: rabbits,
            AnimalType.turtle: turtles
        ]
        
        let maxAnimals = resultNumbersAnimals.reduce(0) { max($0, $1.1) }
        
        let getFrequentNumberAnimals = [resultNumbersAnimals[AnimalType.dog],
                                       resultNumbersAnimals[AnimalType.cat],
                                       resultNumbersAnimals[AnimalType.rabbit],
                                       resultNumbersAnimals[AnimalType.turtle]
        ]

        var setFrequent: [AnimalType] = []
        for value in getFrequentNumberAnimals {
            if value == maxAnimals {
                switch value {
                case resultNumbersAnimals[AnimalType.dog]:
                    setFrequent.append(AnimalType.dog)
                    resultNumbersAnimals[AnimalType.dog] = 0
                case resultNumbersAnimals[AnimalType.cat]:
                    setFrequent.append(AnimalType.cat)
                    resultNumbersAnimals[AnimalType.cat] = 0
                case resultNumbersAnimals[AnimalType.rabbit]:
                    setFrequent.append(AnimalType.rabbit)
                    resultNumbersAnimals[AnimalType.rabbit] = 0
                default:
                    setFrequent.append(AnimalType.turtle)
                    resultNumbersAnimals[AnimalType.turtle] = 0
                }
            }
        }
        
        var sortedAnimals = [String]()
        for value in setFrequent {
            switch value {
            case AnimalType.dog:
                sortedAnimals.append("dog")
            case AnimalType.cat:
                sortedAnimals.append("cat")
            case AnimalType.rabbit:
                sortedAnimals.append("rabbit")
            default:
                sortedAnimals.append("turtle")
            }
        }
        sortedAnimals.sort()
        
        var elements = [String]()
        if sortedAnimals.count > 1 {
            for value in sortedAnimals {
                elements.append(value)
            }
        }
        let animal = sortedAnimals.removeFirst()
        switch animal {
        case "dog":
            setResult(result: [AnimalType.dog])
        case "cat":
            setResult(result: [AnimalType.cat])
        case "rabbit":
            setResult(result: [AnimalType.rabbit])
        default:
            setResult(result: [AnimalType.turtle])
        }
    }
 
    private func setResult(result: [AnimalType]) {
        switch result {
        case [AnimalType.dog]:
            animalLabel.text = "–í—ã - üê∂"
            resultLabel.text = AnimalType.dog.definition
        case [AnimalType.cat]:
            animalLabel.text = "–í—ã - üê±"
            resultLabel.text = AnimalType.cat.definition
        case [AnimalType.rabbit]:
            animalLabel.text = "–í—ã - üê∞"
            resultLabel.text = AnimalType.rabbit.definition
        default:
            animalLabel.text = "–í—ã - üê¢"
            resultLabel.text = AnimalType.turtle.definition
        }
    }*/
